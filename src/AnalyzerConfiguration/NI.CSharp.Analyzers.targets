<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <NI_CodeAnalysisRuleSetDirectory>$(PkgNI_CSharp_Analyzers)\content</NI_CodeAnalysisRuleSetDirectory>
  </PropertyGroup>

  <!-- Rulesets are deprecated by Microsoft and we should only enable it if we're using earlier than .NET 6 -->
  <PropertyGroup Condition="'$(NETCoreSdkVersion)' == '' or $([MSBuild]::VersionLessThan('$(NETCoreSdkVersion)', '6.0'))">
    <CodeAnalysisRuleSetDefined>False</CodeAnalysisRuleSetDefined>
    <CodeAnalysisRuleSetDefined Condition="'$(CodeAnalysisRuleSet)' != '' and '$(CodeAnalysisRuleSet)' != 'MinimumRecommendedRules.ruleset'">True</CodeAnalysisRuleSetDefined>
  </PropertyGroup>

  <PropertyGroup Condition="'$(CodeAnalysisRuleSetDefined)' == 'False'">
    <CodeAnalysisRuleSet>$(NI_CodeAnalysisRuleSetDirectory)\NI.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(NI_IsTestUtilitiesProject)' == 'True'">$(NI_CodeAnalysisRuleSetDirectory)\NI.TestUtilities.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(NI_IsTestProject)' == 'True'">$(NI_CodeAnalysisRuleSetDirectory)\NI.Tests.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Enable analyzers if they haven't been explicitly disabled, we're using Roslyn for CA/SA, the code needs to be validated -->
    <NI_EnableAnalyzers Condition="'$(NI_EnableAnalyzers)' == ''">True</NI_EnableAnalyzers>
  </PropertyGroup>

  <PropertyGroup>
    <!--AdditionalSpellingDictionary.dic contains the differences in words between the hunspell and Microsoft dictionaries-->
    <NI1704_AdditionalSpellingDictionary>$(NI_CodeAnalysisRuleSetDirectory)\NI1704_AdditionalSpellingDictionary.dic</NI1704_AdditionalSpellingDictionary>
  </PropertyGroup>

  <PropertyGroup Condition="'$(NI_EnableAnalyzers)' == 'True' and '$(AnalysisMode)' == 'NI'">
    <AnalysisModeStyle Condition="'$(AnalysisModeStyle)' == ''">Default</AnalysisModeStyle>
    <AnalysisModeSecurity Condition="'$(AnalysisModeSecurity)' == ''">Default</AnalysisModeSecurity>
    <AnalysisModeDesign Condition="'$(AnalysisModeDesign)' == ''">All</AnalysisModeDesign>
    <AnalysisModeDocumentation Condition="'$(AnalysisModeDocumentation)' == ''">All</AnalysisModeDocumentation>
    <AnalysisModeGlobalization Condition="'$(AnalysisModeGlobalization)' == ''">All</AnalysisModeGlobalization>
    <AnalysisModeInteroperability Condition="'$(AnalysisModeInteroperability)' == ''">All</AnalysisModeInteroperability>
    <AnalysisModeMaintainability Condition="'$(AnalysisModeMaintainability)' == ''">All</AnalysisModeMaintainability>
    <AnalysisModeNaming Condition="'$(AnalysisModeNaming)' == ''">All</AnalysisModeNaming>
    <AnalysisModePerformance Condition="'$(AnalysisModePerformance)' == ''">All</AnalysisModePerformance>
    <AnalysisModeReliability Condition="'$(AnalysisModeReliability)' == ''">All</AnalysisModeReliability>
    <AnalysisModeUsage Condition="'$(AnalysisModeUsage)' == ''">All</AnalysisModeUsage>

    <EnforceCodeStyleInBuild Condition="'$(EnforceCodeStyleInBuild)' == ''">true</EnforceCodeStyleInBuild>
  </PropertyGroup>

  <ItemGroup Condition="'$(NI_EnableAnalyzers)' == 'True'">
    <!-- Microsoft's SA analyzers -->
    <Analyzer Include="$(PkgStyleCop_Analyzers_Unstable)\analyzers\dotnet\cs\StyleCop.Analyzers.dll"/>
    <Analyzer Include="$(PkgStyleCop_Analyzers_Unstable)\analyzers\dotnet\cs\StyleCop.Analyzers.CodeFixes.dll"/>

    <!-- Microsoft's CA analyzers -->
    <Analyzer Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)\analyzers\dotnet\cs\Microsoft.CodeAnalysis.NetAnalyzers.dll"/>
    <Analyzer Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.NetAnalyzers.dll"/>
    <Analyzer Include="$(PkgMicrosoft_VisualStudio_Threading_Analyzers)\analyzers\cs\Microsoft.VisualStudio.Threading.Analyzers.dll"/>

    <!-- NI's CA analyzers -->
    <Analyzer Include="$(PkgNI_CSharp_Analyzers)\analyzers\dotnet\cs\NationalInstruments.Analyzers.Utilities.dll"/>
    <Analyzer Include="$(PkgNI_CSharp_Analyzers)\analyzers\dotnet\cs\NationalInstruments.Analyzers.dll"/>

    <!-- Configuration files for our analyzers -->
    <!-- By adding the Link attribute, these files will not be shown in the Solution Explorer for .NET Core projects. -->
    <AdditionalFiles Include="$(NI1704_AdditionalSpellingDictionary)" Condition="Exists('$(NI1704_AdditionalSpellingDictionary)')">
      <Link>$(NI1704_AdditionalSpellingDictionary)</Link>
    </AdditionalFiles>
    <AdditionalFiles Include="$(CodeAnalysisRuleSet)" Condition="Exists('$(CodeAnalysisRuleSet)')">
      <Link>$(CodeAnalysisRuleSet)</Link>
    </AdditionalFiles>
  </ItemGroup>

  <!-- By default, the NI.ruleset reports violations as warnings instead of errors. 
       Set TreatWarningsAsErrors to true in release to generate errors. -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Disable portions of Roslyn analyzers that would otherwise generate errors in our build. There should be a goal
       around removing as many of these as possible, but we want to report warnings and elevate warnings as errors in
       our release builds rather than erroring all the time on everything. -->
  <ItemGroup>
    <RoslynTransition_DisabledRule Include="0419" />
    <RoslynTransition_DisabledRule Include="1574" />
    <RoslynTransition_DisabledRule Include="1580" />
    <RoslynTransition_DisabledRule Include="1587" />
    <RoslynTransition_DisabledRule Include="1589" />
    <RoslynTransition_DisabledRule Include="1658" />
    <RoslynTransition_DisabledRule Include="1712" />
    <RoslynTransition_DisabledRule Include="1998" />
  </ItemGroup>
  <PropertyGroup>
    <TemporaryWarningsNotAsErrors Condition="'$(TemporaryWarningsNotAsErrors)' == ''"></TemporaryWarningsNotAsErrors>
    <WarningsNotAsErrors>$(WarningsNotAsErrors),@(RoslynTransition_DisabledRule),$(TemporaryWarningsNotAsErrors)</WarningsNotAsErrors>
    <NoWarn>$(NoWarn),@(RoslynTransition_DisabledRule)</NoWarn>
  </PropertyGroup>
</Project>
